return {}

--
-- → $generated-end
-- → $generated-start
-- → rust-analyzer.assist.emitMustUse                                      default: false
-- → rust-analyzer.assist.expressionFillDefault                            default: "todo"
-- → rust-analyzer.cachePriming.enable                                     default: true
-- → rust-analyzer.cachePriming.numThreads                                 default: 0
-- → rust-analyzer.cargo.autoreload                                        default: true
-- → rust-analyzer.cargo.buildScripts.enable                               default: true
-- → rust-analyzer.cargo.buildScripts.invocationLocation                   default: "workspace"
-- → rust-analyzer.cargo.buildScripts.invocationStrategy                   default: "per_workspace"
-- → rust-analyzer.cargo.buildScripts.overrideCommand                      default: null
-- → rust-analyzer.cargo.buildScripts.useRustcWrapper                      default: true
-- → rust-analyzer.cargo.extraEnv                                          default: {}
-- → rust-analyzer.cargo.features                                          default: []
-- → rust-analyzer.cargo.noDefaultFeatures                                 default: false
-- → rust-analyzer.cargo.sysroot                                           default: "discover"
-- → rust-analyzer.cargo.target                                            default: null
-- → rust-analyzer.cargo.unsetTest                                         default: ["core"]
-- → rust-analyzer.cargoRunner                                             default: null
-- → rust-analyzer.checkOnSave.allTargets                                  default: true
-- → rust-analyzer.checkOnSave.command                                     default: "check"
-- → rust-analyzer.checkOnSave.enable                                      default: true
-- → rust-analyzer.checkOnSave.extraArgs                                   default: []
-- → rust-analyzer.checkOnSave.extraEnv                                    default: {}
-- → rust-analyzer.checkOnSave.features                                    default: null
-- → rust-analyzer.checkOnSave.invocationLocation                          default: "workspace"
-- → rust-analyzer.checkOnSave.invocationStrategy                          default: "per_workspace"
-- → rust-analyzer.checkOnSave.noDefaultFeatures                           default: null
-- → rust-analyzer.checkOnSave.overrideCommand                             default: null
-- → rust-analyzer.checkOnSave.target                                      default: null
-- → rust-analyzer.completion.autoimport.enable                            default: true
-- → rust-analyzer.completion.autoself.enable                              default: true
-- → rust-analyzer.completion.callable.snippets                            default: "fill_arguments"
-- → rust-analyzer.completion.postfix.enable                               default: true
-- → rust-analyzer.completion.privateEditable.enable                       default: false
-- → rust-analyzer.completion.snippets.custom                              default: {"Some":{"body":"Some(${receiver})","scope":"expr","description":"Wrap the expression in an `Option::Some`","postfix":"some"},"Ok":{"body":"Ok(${receiver})","scope":"expr","description":"Wrap the expression in a `Result::Ok`","postfix":"ok"},"Rc::new":{"requires":"std::rc::Rc","postfix":"rc","body":"Rc::new(${receiver})","scope":"expr","description":"Put the expression into an `Rc`"},"Arc::new":{"requires":"std::sync::Arc","postfix":"arc","body":"Arc::new(${receiver})","scope":"expr","description":"Put the expression into an `Arc`"},"Err":{"body":"Err(${receiver})","scope":"expr","description":"Wrap the expression in a `Result::Err`","postfix":"err"},"Box::pin":{"requires":"std::boxed::Box","postfix":"pinbox","body":"Box::pin(${receiver})","scope":"expr","description":"Put the expression into a pinned `Box`"}}
-- → rust-analyzer.debug.engine                                            default: "auto"
-- → rust-analyzer.debug.engineSettings                                    default: {}
-- → rust-analyzer.debug.openDebugPane                                     default: false
-- → rust-analyzer.debug.sourceFileMap                                     default: {"\/rustc\/<id>":"${env:USERPROFILE}\/.rustup\/toolchains\/<toolchain-id>\/lib\/rustlib\/src\/rust"}
-- → rust-analyzer.diagnostics.disabled                                    default: []
-- → rust-analyzer.diagnostics.enable                                      default: true
-- → rust-analyzer.diagnostics.experimental.enable                         default: false
-- → rust-analyzer.diagnostics.remapPrefix                                 default: {}
-- → rust-analyzer.diagnostics.warningsAsHint                              default: []
-- → rust-analyzer.diagnostics.warningsAsInfo                              default: []
-- → rust-analyzer.files.excludeDirs                                       default: []
-- → rust-analyzer.files.watcher                                           default: "client"
-- → rust-analyzer.highlightRelated.breakPoints.enable                     default: true
-- → rust-analyzer.highlightRelated.exitPoints.enable                      default: true
-- → rust-analyzer.highlightRelated.references.enable                      default: true
-- → rust-analyzer.highlightRelated.yieldPoints.enable                     default: true
-- → rust-analyzer.hover.actions.debug.enable                              default: true
-- → rust-analyzer.hover.actions.enable                                    default: true
-- → rust-analyzer.hover.actions.gotoTypeDef.enable                        default: true
-- → rust-analyzer.hover.actions.implementations.enable                    default: true
-- → rust-analyzer.hover.actions.references.enable                         default: false
-- → rust-analyzer.hover.actions.run.enable                                default: true
-- → rust-analyzer.hover.documentation.enable                              default: true
-- → rust-analyzer.hover.documentation.keywords.enable                     default: true
-- → rust-analyzer.hover.links.enable                                      default: true
-- → rust-analyzer.imports.granularity.enforce                             default: false
-- → rust-analyzer.imports.granularity.group                               default: "crate"
-- → rust-analyzer.imports.group.enable                                    default: true
-- → rust-analyzer.imports.merge.glob                                      default: true
-- → rust-analyzer.imports.prefer.no.std                                   default: false
-- → rust-analyzer.imports.prefix                                          default: "plain"
-- → rust-analyzer.inlayHints.bindingModeHints.enable                      default: false
-- → rust-analyzer.inlayHints.chainingHints.enable                         default: true
-- → rust-analyzer.inlayHints.closingBraceHints.enable                     default: true
-- → rust-analyzer.inlayHints.closingBraceHints.minLines                   default: 25
-- → rust-analyzer.inlayHints.closureReturnTypeHints.enable                default: "never"
-- → rust-analyzer.inlayHints.lifetimeElisionHints.enable                  default: "never"
-- → rust-analyzer.inlayHints.lifetimeElisionHints.useParameterNames       default: false
-- → rust-analyzer.inlayHints.maxLength                                    default: 25
-- → rust-analyzer.inlayHints.parameterHints.enable                        default: true
-- → rust-analyzer.inlayHints.reborrowHints.enable                         default: "never"
-- → rust-analyzer.inlayHints.renderColons                                 default: true
-- → rust-analyzer.inlayHints.typeHints.enable                             default: true
-- → rust-analyzer.inlayHints.typeHints.hideClosureInitialization          default: false
-- → rust-analyzer.inlayHints.typeHints.hideNamedConstructor               default: false
-- → rust-analyzer.joinLines.joinAssignments                               default: true
-- → rust-analyzer.joinLines.joinElseIf                                    default: true
-- → rust-analyzer.joinLines.removeTrailingComma                           default: true
-- → rust-analyzer.joinLines.unwrapTrivialBlock                            default: true
-- → rust-analyzer.lens.debug.enable                                       default: true
-- → rust-analyzer.lens.enable                                             default: true
-- → rust-analyzer.lens.forceCustomCommands                                default: true
-- → rust-analyzer.lens.implementations.enable                             default: true
-- → rust-analyzer.lens.location                                           default: "above_name"
-- → rust-analyzer.lens.references.adt.enable                              default: false
-- → rust-analyzer.lens.references.enumVariant.enable                      default: false
-- → rust-analyzer.lens.references.method.enable                           default: false
-- → rust-analyzer.lens.references.trait.enable                            default: false
-- → rust-analyzer.lens.run.enable                                         default: true
-- → rust-analyzer.linkedProjects                                          default: []
-- → rust-analyzer.lru.capacity                                            default: null
-- → rust-analyzer.notifications.cargoTomlNotFound                         default: true
-- → rust-analyzer.procMacro.attributes.enable                             default: true
-- → rust-analyzer.procMacro.enable                                        default: true
-- → rust-analyzer.procMacro.ignored                                       default: {}
-- → rust-analyzer.procMacro.server                                        default: null
-- → rust-analyzer.references.excludeImports                               default: false
-- → rust-analyzer.restartServerOnConfigChange                             default: false
-- → rust-analyzer.runnableEnv                                             default: null
-- → rust-analyzer.runnables.command                                       default: null
-- → rust-analyzer.runnables.extraArgs                                     default: []
-- → rust-analyzer.rustc.source                                            default: null
-- → rust-analyzer.rustfmt.extraArgs                                       default: []
-- → rust-analyzer.rustfmt.overrideCommand                                 default: null
-- → rust-analyzer.rustfmt.rangeFormatting.enable                          default: false
-- → rust-analyzer.semanticHighlighting.doc.comment.inject.enable          default: true
-- → rust-analyzer.semanticHighlighting.operator.enable                    default: true
-- → rust-analyzer.semanticHighlighting.operator.specialization.enable     default: false
-- → rust-analyzer.semanticHighlighting.punctuation.enable                 default: false
-- → rust-analyzer.semanticHighlighting.punctuation.separate.macro.bang    default: false
-- → rust-analyzer.semanticHighlighting.punctuation.specialization.enable  default: false
-- → rust-analyzer.semanticHighlighting.strings.enable                     default: true
-- → rust-analyzer.server.extraEnv                                         default: null
-- → rust-analyzer.server.path                                             default: null
-- → rust-analyzer.signatureInfo.detail                                    default: "full"
-- → rust-analyzer.signatureInfo.documentation.enable                      default: true
-- → rust-analyzer.trace.extension                                         default: false
-- → rust-analyzer.trace.server                                            default: "off"
-- → rust-analyzer.typing.autoClosingAngleBrackets.enable                  default: false
-- → rust-analyzer.typing.continueCommentsOnNewline                        default: true
-- → rust-analyzer.workspace.symbol.search.kind                            default: "only_types"
-- → rust-analyzer.workspace.symbol.search.limit                           default: 128
-- → rust-analyzer.workspace.symbol.search.scope                           default: "workspace"
